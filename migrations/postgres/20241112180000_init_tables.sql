-- !txn
-- +up

CREATE TABLE IF NOT EXISTS "trades" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "id" BIGINT, 
    "order_id" BIGINT, 
    "exchange" VARCHAR, 
    "price" decimal(20,8), 
    "quantity" decimal(20,8), 
    "quote_quantity" decimal(20,8), 
    "symbol" VARCHAR, 
    "side" VARCHAR, 
    "is_buyer" BOOLEAN, 
    "is_maker" BOOLEAN, 
    "traded_at" timestamptz, 
    "fee" decimal(20,8), 
    "fee_currency" VARCHAR, 
    "is_margin" BOOLEAN, 
    "is_futures" BOOLEAN, 
    "is_isolated" BOOLEAN, 
    "strategy_id" VARCHAR, 
    "pnl" DOUBLE PRECISION, 
    "inserted_at" timestamptz DEFAULT CURRENT_TIMESTAMP, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "orders" (
    "exchange" VARCHAR, 
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "order_id" BIGINT, 
    "uuid" VARCHAR, 
    "status" VARCHAR, 
    "executed_quantity" decimal(20,8), 
    "is_working" BOOLEAN, 
    "created_at" timestamptz, 
    "updated_at" timestamptz, 
    "is_futures" BOOLEAN, 
    "is_margin" BOOLEAN, 
    "is_isolated" BOOLEAN, 
    "client_order_id" VARCHAR, 
    "symbol" VARCHAR, 
    "side" VARCHAR, 
    "order_type" varchar, 
    "quantity" decimal(20,8), 
    "price" decimal(20,8), 
    "average_price" decimal(20,8), 
    "stop_price" decimal(20,8), 
    "time_in_force" VARCHAR, 
    "group_id" INTEGER, 
    "margin_side_effect" VARCHAR, 
    "reduce_only" BOOLEAN, 
    "close_position" BOOLEAN, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "assets" (
    "currency" VARCHAR, 
    "total" decimal(20,8), 
    "net_asset" decimal(20,8), 
    "interest" decimal(20,8), 
    "net_asset_in_usd" decimal(20,8), 
    "net_asset_in_btc" decimal(20,8), 
    "time" timestamptz, 
    "lock" decimal(20,8), 
    "available" decimal(20,8), 
    "borrowed" decimal(20,8), 
    "price_in_usd" decimal(20,8)
);

CREATE TABLE IF NOT EXISTS "deposits" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "time" timestamptz, 
    "amount" decimal(20,8), 
    "asset" VARCHAR, 
    "address" VARCHAR, 
    "address_tag" VARCHAR, 
    "txn_id" VARCHAR, 
    "status" VARCHAR, 
    "unlock_confirm" BIGINT, 
    "confirmation" VARCHAR,
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "withdraws" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "asset" VARCHAR, 
    "amount" decimal(20,8), 
    "address" VARCHAR, 
    "address_tag" VARCHAR, 
    "status" VARCHAR, 
    "original_status" VARCHAR, 
    "transaction_id" VARCHAR, 
    "txn_fee" decimal(20,8), 
    "transaction_fee_currency" VARCHAR, 
    "withdraw_order_id" VARCHAR, 
    "time" timestamptz, 
    "network" VARCHAR, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "profits" (
    "symbol" VARCHAR, 
    "quote_currency" VARCHAR, 
    "base_currency" VARCHAR, 
    "average_cost" decimal(20,8), 
    "profit" decimal(20,8), 
    "net_profit" decimal(20,8), 
    "profit_margin" decimal(20,8), 
    "net_profit_margin" decimal(20,8), 
    "trade_id" BIGINT, 
    "order_id" BIGINT, 
    "side" VARCHAR, 
    "is_buyer" BOOLEAN, 
    "is_maker" BOOLEAN, 
    "price" decimal(20,8), 
    "quantity" decimal(20,8), 
    "quote_quantity" decimal(20,8), 
    "fee_in_usd" decimal(20,8), 
    "fee" decimal(20,8), 
    "fee_currency" VARCHAR, 
    "exchange" VARCHAR, 
    "is_margin" BOOLEAN, 
    "is_futures" BOOLEAN, 
    "is_isolated" BOOLEAN, 
    "traded_at" timestamptz, 
    "strategy" VARCHAR, 
    "strategy_instance_id" VARCHAR
);

CREATE TABLE IF NOT EXISTS "rewards" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "uuid" VARCHAR, 
    "exchange" VARCHAR, 
    "type" VARCHAR, 
    "currency" VARCHAR, 
    "quantity" decimal(20,8), 
    "state" VARCHAR, 
    "note" VARCHAR, 
    "spent" BOOLEAN, 
    "created_at" timestamptz DEFAULT current_timestamp, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "margin_interests" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "asset" VARCHAR, 
    "principle" decimal(20,8), 
    "interest" decimal(20,8), 
    "interest_rate" decimal(20,8), 
    "isolated_symbol" VARCHAR, 
    "time" timestamptz, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "margin_loans" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "transaction_id" BIGINT, 
    "asset" VARCHAR, 
    "principle" decimal(20,8), 
    "time" timestamptz, 
    "isolated_symbol" VARCHAR, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "margin_repays" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "transaction_id" BIGINT, 
    "asset" VARCHAR, 
    "principle" decimal(20,8), 
    "time" timestamptz, 
    "isolated_symbol" VARCHAR, 
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "klines" (
    "gid" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    "exchange" VARCHAR, 
    "symbol" VARCHAR, 
    "start_time" timestamptz, 
    "end_time" timestamptz, 
    "interval" varchar, 
    "open" decimal(20,8), 
    "close" decimal(20,8), 
    "high" decimal(20,8), 
    "low" decimal(20,8), 
    "volume" decimal(20,8), 
    "quote_volume" decimal(20,8), 
    "taker_buy_base_volume" decimal(20,8), 
    "taker_buy_quote_volume" decimal(20,8), 
    "last_trade_id" BIGINT, 
    "num_trades" BIGINT, 
    "closed" BOOLEAN DEFAULT true,
    PRIMARY KEY ("gid")
);

CREATE TABLE IF NOT EXISTS "binance_klines" (LIKE "klines" INCLUDING ALL);

CREATE TABLE IF NOT EXISTS "okex_klines" (LIKE "klines" INCLUDING ALL);

CREATE TABLE IF NOT EXISTS "max_klines" (LIKE "klines" INCLUDING ALL);

-- +down

DROP TABLE IF EXISTS "trades";
DROP TABLE IF EXISTS "orders";
DROP TABLE IF EXISTS "assets";
DROP TABLE IF EXISTS "deposits";
DROP TABLE IF EXISTS "withdraws";
DROP TABLE IF EXISTS "profits";
DROP TABLE IF EXISTS "rewards";
DROP TABLE IF EXISTS "margin_interests";
DROP TABLE IF EXISTS "margin_loans";
DROP TABLE IF EXISTS "margin_repays";
DROP TABLE IF EXISTS "binance_klines";
DROP TABLE IF EXISTS "okex_klines";
DROP TABLE IF EXISTS "max_klines";
DROP TABLE IF EXISTS "klines";